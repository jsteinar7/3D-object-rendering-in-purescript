// Generated by psc-bundle 0.11.5
var PS = {};
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Category = PS["Control.Category"];
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["const"] = $$const;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.getCanvasElementByIdImpl = function(id, Just, Nothing) {
      return function() {
          var el = document.getElementById(id);
          if (el && el instanceof HTMLCanvasElement) {
              return Just(el);
          } else {
              return Nothing;
          }
      };
  };

  exports.getContext2D = function(c) {
      return function() {
          return c.getContext('2d');
      };
  };

  exports.setFillStyle = function(style) {
      return function(ctx) {
          return function() {
              ctx.fillStyle = style;
              return ctx;
          };
      };
  };

  exports.beginPath = function(ctx) {
      return function() {
          ctx.beginPath();
          return ctx;
      };
  };

  exports.fill = function(ctx) {
      return function() {
          ctx.fill();
          return ctx;
      };
  };

  exports.lineTo = function(ctx) {
      return function(x) {
          return function(y) {
              return function() {
                  ctx.lineTo(x, y);
                  return ctx;
              };
          };
      };
  };

  exports.moveTo = function(ctx) {
      return function(x) {
          return function(y) {
              return function() {
                  ctx.moveTo(x, y);
                  return ctx;
              };
          };
      };
  };

  exports.closePath = function(ctx) {
      return function() {
          ctx.closePath();
          return ctx;
      };
  };

  exports.rect = function(ctx) {
      return function(r) {
          return function() {
              ctx.rect(r.x, r.y, r.w, r.h);
              return ctx;
          };
      };
  };
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Graphics.Canvas"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception_Unsafe = PS["Control.Monad.Eff.Exception.Unsafe"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];
  var getCanvasElementById = function (elId) {
      return $foreign.getCanvasElementByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
  };
  var fillPath = function (ctx) {
      return function (path) {
          return function __do() {
              var v = $foreign.beginPath(ctx)();
              var v1 = path();
              var v2 = $foreign.fill(ctx)();
              return v1;
          };
      };
  };
  exports["fillPath"] = fillPath;
  exports["getCanvasElementById"] = getCanvasElementById;
  exports["closePath"] = $foreign.closePath;
  exports["getContext2D"] = $foreign.getContext2D;
  exports["lineTo"] = $foreign.lineTo;
  exports["moveTo"] = $foreign.moveTo;
  exports["rect"] = $foreign.rect;
  exports["setFillStyle"] = $foreign.setFillStyle;
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
    "use strict";          

  exports.cos = Math.cos;    

  exports.sin = Math.sin;      

  exports.pi = Math.PI;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Math"];
  exports["cos"] = $foreign.cos;
  exports["pi"] = $foreign.pi;
  exports["sin"] = $foreign.sin;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var $$Math = PS["Math"];
  var Prelude = PS["Prelude"];        
  var y2 = 350.0;
  var y1 = 150.0;
  var x2 = 350.0;
  var x1 = 150.0;
  var centre = 250.0;
  var rotate1 = function (a1) {
      return ((x1 - centre) * $$Math.cos(a1) - (y1 - centre) * $$Math.sin(a1)) + centre;
  };
  var rotate2 = function (a2) {
      return (y1 - centre) * $$Math.cos(a2) + (x1 - centre) * $$Math.sin(a2) + centre;
  };
  var rotate3 = function (a3) {
      return ((x2 - centre) * $$Math.cos(a3) - (y2 - centre) * $$Math.sin(a3)) + centre;
  };
  var rotate4 = function (a4) {
      return (y2 - centre) * $$Math.cos(a4) + (x2 - centre) * $$Math.sin(a4) + centre;
  };
  var rotate5 = function (a5) {
      return ((x2 - centre) * $$Math.cos(a5) - (y1 - centre) * $$Math.sin(a5)) + centre;
  };
  var rotate6 = function (a6) {
      return (y1 - centre) * $$Math.cos(a6) + (x2 - centre) * $$Math.sin(a6) + centre;
  };
  var rotate7 = function (a7) {
      return ((x1 - centre) * $$Math.cos(a7) - (y2 - centre) * $$Math.sin(a7)) + centre;
  };
  var rotate8 = function (a8) {
      return (y2 - centre) * $$Math.cos(a8) + (x1 - centre) * $$Math.sin(a8) + centre;
  };
  var angle = function (val) {
      return (val * $$Math.pi) / 180.0;
  };
  exports["angle"] = angle;
  exports["centre"] = centre;
  exports["rotate1"] = rotate1;
  exports["rotate2"] = rotate2;
  exports["rotate3"] = rotate3;
  exports["rotate4"] = rotate4;
  exports["rotate5"] = rotate5;
  exports["rotate6"] = rotate6;
  exports["rotate7"] = rotate7;
  exports["rotate8"] = rotate8;
  exports["x1"] = x1;
  exports["x2"] = x2;
  exports["y1"] = y1;
  exports["y2"] = y2;
})(PS["MyMod"] = PS["MyMod"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Color = PS["Color"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semiring = PS["Data.Semiring"];
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var Graphics_Drawing = PS["Graphics.Drawing"];
  var Graphics_Isometric = PS["Graphics.Isometric"];
  var $$Math = PS["Math"];
  var MyMod = PS["MyMod"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var n = 25.0;
  var main = Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
      var v = Graphics_Canvas.getCanvasElementById("canvas1")();
      var __unused = function (dictPartial1) {
          return function ($dollar39) {
              return $dollar39;
          };
      };
      return __unused()((function () {
          if (v instanceof Data_Maybe.Just) {
              return function __do() {
                  var v1 = Graphics_Canvas.getContext2D(v.value0)();
                  var v2 = Graphics_Canvas.setFillStyle("#FFF600")(v1)();
                  var v3 = Graphics_Canvas.fillPath(v1)(function __do() {
                      var v3 = Graphics_Canvas.moveTo(v1)(MyMod.rotate1(MyMod.angle(n)))(MyMod.rotate2(MyMod.angle(n)))();
                      var v4 = Graphics_Canvas.lineTo(v1)(MyMod.rotate5(MyMod.angle(n)))(MyMod.rotate4(MyMod.angle(n)))();
                      var v5 = Graphics_Canvas.lineTo(v1)(MyMod.rotate3(MyMod.angle(n)))(MyMod.rotate6(MyMod.angle(n)))();
                      var v6 = Graphics_Canvas.lineTo(v1)(MyMod.rotate7(MyMod.angle(n)))(MyMod.rotate8(MyMod.angle(n)))();
                      return Graphics_Canvas.closePath(v1)();
                  })();
                  var v4 = Graphics_Canvas.setFillStyle("#00FF19")(v1)();
                  var v5 = Graphics_Canvas.fillPath(v1)(function __do() {
                      var v5 = Graphics_Canvas.moveTo(v1)(MyMod.rotate1(MyMod.angle(n)) + 35.0)(MyMod.rotate2(MyMod.angle(n)) + 35.0)();
                      var v6 = Graphics_Canvas.lineTo(v1)(MyMod.rotate5(MyMod.angle(n)) + 35.0)(MyMod.rotate6(MyMod.angle(n)) + 35.0)();
                      var v7 = Graphics_Canvas.lineTo(v1)(MyMod.rotate3(MyMod.angle(n)) + 35.0)(MyMod.rotate4(MyMod.angle(n)) + 35.0)();
                      var v8 = Graphics_Canvas.lineTo(v1)(MyMod.rotate7(MyMod.angle(n)) + 35.0)(MyMod.rotate8(MyMod.angle(n)) + 35.0)();
                      return Graphics_Canvas.closePath(v1)();
                  })();
                  var v6 = Graphics_Canvas.setFillStyle("#00FFF6")(v1)();
                  var v7 = Graphics_Canvas.fillPath(v1)(function __do() {
                      var v7 = Graphics_Canvas.moveTo(v1)(MyMod.rotate1(MyMod.angle(n)))(MyMod.rotate2(MyMod.angle(n)))();
                      var v8 = Graphics_Canvas.lineTo(v1)(MyMod.rotate1(MyMod.angle(n)) + 35.0)(MyMod.rotate2(MyMod.angle(n)) + 35.0)();
                      var v9 = Graphics_Canvas.lineTo(v1)(MyMod.rotate5(MyMod.angle(n)) + 35.0)(MyMod.rotate6(MyMod.angle(n)) + 35.0)();
                      var v10 = Graphics_Canvas.lineTo(v1)(MyMod.rotate5(MyMod.angle(n)))(MyMod.rotate6(MyMod.angle(n)))();
                      return Graphics_Canvas.closePath(v1)();
                  })();
                  var v8 = Graphics_Canvas.setFillStyle("#FF0019")(v1)();
                  var v9 = Graphics_Canvas.fillPath(v1)(function __do() {
                      var v9 = Graphics_Canvas.moveTo(v1)(MyMod.rotate1(MyMod.angle(n)))(MyMod.rotate2(MyMod.angle(n)))();
                      var v10 = Graphics_Canvas.lineTo(v1)(MyMod.rotate1(MyMod.angle(n)) + 35.0)(MyMod.rotate2(MyMod.angle(n)) + 35.0)();
                      var v11 = Graphics_Canvas.lineTo(v1)(MyMod.rotate7(MyMod.angle(n)) + 35.0)(MyMod.rotate8(MyMod.angle(n)) + 35.0)();
                      var v12 = Graphics_Canvas.lineTo(v1)(MyMod.rotate7(MyMod.angle(n)))(MyMod.rotate8(MyMod.angle(n)))();
                      return Graphics_Canvas.closePath(v1)();
                  })();
                  var v10 = Graphics_Canvas.setFillStyle("#1900FF")(v1)();
                  var v11 = Graphics_Canvas.fillPath(v1)(function __do() {
                      var v11 = Graphics_Canvas.moveTo(v1)(MyMod.rotate7(MyMod.angle(n)))(MyMod.rotate8(MyMod.angle(n)))();
                      var v12 = Graphics_Canvas.lineTo(v1)(MyMod.rotate7(MyMod.angle(n)) + 35.0)(MyMod.rotate8(MyMod.angle(n)) + 35.0)();
                      var v13 = Graphics_Canvas.lineTo(v1)(MyMod.rotate3(MyMod.angle(n)) + 35.0)(MyMod.rotate4(MyMod.angle(n)) + 35.0)();
                      var v14 = Graphics_Canvas.lineTo(v1)(MyMod.rotate3(MyMod.angle(n)))(MyMod.rotate4(MyMod.angle(n)))();
                      return Graphics_Canvas.closePath(v1)();
                  })();
                  var v12 = Graphics_Canvas.setFillStyle("#000000")(v1)();
                  var v13 = Graphics_Canvas.fillPath(v1)(function __do() {
                      var v13 = Graphics_Canvas.moveTo(v1)(MyMod.rotate3(MyMod.angle(n)))(MyMod.rotate4(MyMod.angle(n)))();
                      var v14 = Graphics_Canvas.lineTo(v1)(MyMod.rotate3(MyMod.angle(n)) + 35.0)(MyMod.rotate4(MyMod.angle(n)) + 35.0)();
                      var v15 = Graphics_Canvas.lineTo(v1)(MyMod.rotate5(MyMod.angle(n)) + 35.0)(MyMod.rotate6(MyMod.angle(n)) + 35.0)();
                      var v16 = Graphics_Canvas.lineTo(v1)(MyMod.rotate5(MyMod.angle(n)))(MyMod.rotate6(MyMod.angle(n)))();
                      return Graphics_Canvas.closePath(v1)();
                  })();
                  return Graphics_Canvas.fillPath(v1)(Graphics_Canvas.rect(v1)({
                      x: 150.0, 
                      y: 150.0, 
                      w: 0.0, 
                      h: 0.0
                  }))();
              };
          };
          throw new Error("Failed pattern match at Main line 34, column 3 - line 35, column 3: " + [ v.constructor.name ]);
      })())();
  });
  exports["main"] = main;
  exports["n"] = n;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
